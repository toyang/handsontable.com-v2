<section class="examples">
  <div class="row">
    <div class="large-12 large-centered columns">
      <h2 class="headline">
        Choose your <strong>components</strong><br>
        <small>Discover our most popular basic and Pro features</small>
      </h2>

      <div class="row">
        <div class="small-12 medium-3 columns side-features">
          <!-- aria expanded true/false for hiding form -->
            <h5>Popular basic features</h5>
            <form id="basic_features">
              <p class="feature_entry">
                <input id="feature_" type="checkbox" checked/>
                <label for="feature_">
                  <svg class="checkbox">
                    <use xlink:href="#checkbox_icon"></use>
                  </svg>
                  <svg class="checkbox checked">
                    <use xlink:href="#checkbox_checked_icon"></use>
                  </svg>
                </label>
              </p>
              <p id="see_all_basic">
                <a href="/features.html">See all features</a>
              </p>
            </form>
            <h5>Pro features</h5>
            <form id="pro_features">
            </form>
            <h5>Examples on JSFiddle</h5>
            <div class="external_links">
                <p><a href="http://jsfiddle.net/handsoncode/Lp4qn55v/" target="_blank">Performance test</a></p>
                <p><a href="http://jsfiddle.net/handsoncode/b2g2h7oh/" target="_blank">Finance</a></p>
                <p><a href="http://jsfiddle.net/handsoncode/g1hnaxtt/" target="_blank">Science</a></p>
                <p><a href="http://jsfiddle.net/handsoncode/b5rvw5zk/" target="_blank">Sport</a></p>
            </div>

        </div>

        <div class="small-12 medium-9 columns">
          <div class="plugin-preview">
            <div id="hot"></div>
            <div id="export-buttons">
              <button id="export-csv" class="btn small ghost-blue">Export to a .csv file</button>
              <button id="export-string" class="btn small ghost-blue">Export to string (displayed in the browser console)</button>
            </div>
          </div>
          <div class="code-box">
            <ul class="tabs clearfix" data-tab role="tablist">
              <li class="left"><a id="enabled-features-tab-link" role="tab" aria-selected="true">Enabled features</a>
              <li class="left"><a id="code-tab-link" role="tab" aria-selected="false">Code</a></li>
              </li>
              <li class="action-link right">
                <a href="#" id="jsfiddle-link">
                  <svg class="left">
                    <use xlink:href="#edit_icon"></use>
                  </svg>
                  Edit
                </a>
              </li>
            </ul>
            <div class="tabs-content">
              <section id="enabled-features-tab" role="tabpanel" aria-hidden="false" class="content">
                <ol>
                  <li data-enabled-placeholder>
                    No features enabled.
                  </li>
                  <li data-enabled-feature="hidden">
                    <h4></h4>

                    <p></p>
                  </li>
                </ol>
              </section>
              <section id="code-tab" role="tabpanel" aria-hidden="true" class="content active">

              </section>
            </div>
          </div>
        </div>
      </div>
      <div class="element-center explore-features">
        <h1>
          Create awesome <strong>apps</strong><br>
          <small>Don't waste your time re-inventing the wheel.<br/> Instead, focus on your customers needs and deploy fast.
          </small>
        </h1>
        <a href="/features.html" class="btn large blue">SEE ALL FEATURES</a>
      </div>
    </div>
  </div>
</section>

<script src="/static/js/examples/feature.js"></script>
<script src="/static/js/examples/examples.js"></script>
<script data-jsfiddle>
  var dataObject = [
    {id: 1, flag: 'EUR', currencyCode: 'EUR', currency: 'Euro',	level: 0.9033, units: 'EUR / USD', asOf: '08/19/2015', onedChng: 0.0026},
    {id: 2, flag: 'JPY', currencyCode: 'JPY', currency: 'Japanese Yen', level: 124.3870, units: 'JPY / USD', asOf: '08/19/2015', onedChng: 0.0001},
    {id: 3, flag: 'GBP', currencyCode: 'GBP', currency: 'Pound Sterling', level: 0.6396, units: 'GBP / USD', asOf: '08/19/2015', onedChng: 0.00},
    {id: 4, flag: 'CHF', currencyCode: 'CHF', currency: 'Swiss Franc',	level: 0.9775, units: 'CHF / USD', asOf: '08/19/2015', onedChng: 0.0008},
    {id: 5, flag: 'CAD', currencyCode: 'CAD', currency: 'Canadian Dollar',	level: 1.3097, units: 'CAD / USD', asOf: '08/19/2015', onedChng: -0.0005},
    {id: 6, flag: 'AUD', currencyCode: 'AUD', currency: 'Australian Dollar',	level: 1.3589, units: 'AUD / USD', asOf: '08/19/2015', onedChng: 0.0020},
    {id: 7, flag: 'NZD', currencyCode: 'NZD', currency: 'New Zealand Dollar',	level: 1.5218, units: 'NZD / USD', asOf: '08/19/2015', onedChng: -0.0036},
    {id: 8, flag: 'SEK', currencyCode: 'SEK', currency: 'Swedish Krona',	level: 8.5280, units: 'SEK / USD', asOf: '08/19/2015', onedChng: 0.0016},
    {id: 9, flag: 'NOK', currencyCode: 'NOK', currency: 'Norwegian Krone',	level: 8.2433, units: 'NOK / USD', asOf: '08/19/2015', onedChng: 0.0008},
    {id: 10, flag: 'BRL', currencyCode: 'BRL', currency: 'Brazilian Real',	level: 3.4806, units: 'BRL / USD', asOf: '08/19/2015', onedChng: -0.0009},
    {id: 11, flag: 'CNY', currencyCode: 'CNY', currency: 'Chinese Yuan',	level: 6.3961, units: 'CNY / USD', asOf: '08/19/2015', onedChng: 0.0004},
    {id: 12, flag: 'RUB', currencyCode: 'RUB', currency: 'Russian Rouble',	level: 65.5980, units: 'RUB / USD', asOf: '08/19/2015', onedChng: 0.0059},
    {id: 13, flag: 'INR', currencyCode: 'INR', currency: 'Indian Rupee',	level: 65.3724, units: 'INR / USD', asOf: '08/19/2015', onedChng: 0.0026},
    {id: 14, flag: 'TRY', currencyCode: 'TRY', currency: 'New Turkish Lira',	level: 2.8689, units: 'TRY / USD', asOf: '08/19/2015', onedChng: 0.0092},
    {id: 15, flag: 'THB', currencyCode: 'THB', currency: 'Thai Baht',	level: 35.5029, units: 'THB / USD', asOf: '08/19/2015', onedChng: 0.0044},
    {id: 16, flag: 'IDR', currencyCode: 'IDR', currency: 'Indonesian Rupiah',	level: 13.83, units: 'IDR / USD', asOf: '08/19/2015', onedChng: -0.0009},
    {id: 17, flag: 'MYR', currencyCode: 'MYR', currency: 'Malaysian Ringgit',	level: 4.0949, units: 'MYR / USD', asOf: '08/19/2015', onedChng: 0.0010},
    {id: 18, flag: 'MXN', currencyCode: 'MXN', currency: 'Mexican New Peso',	level: 16.4309, units: 'MXN / USD', asOf: '08/19/2015', onedChng: 0.0017},
    {id: 19, flag: 'ARS', currencyCode: 'ARS', currency: 'Argentinian Peso',	level: 9.2534, units: 'ARS / USD', asOf: '08/19/2015', onedChng: 0.0011},
    {id: 20, flag: 'DKK', currencyCode: 'DKK', currency: 'Danish Krone',	level: 6.7417, units: 'DKK / USD', asOf: '08/19/2015', onedChng: 0.0025},
    {id: 21, flag: 'ILS', currencyCode: 'ILS', currency: 'Israeli New Sheqel',	level: 3.8262, units: 'ILS / USD', asOf: '08/19/2015', onedChng: 0.0084},
    {id: 22, flag: 'PHP', currencyCode: 'PHP', currency: 'Philippine Peso',	level: 46.3108, units: 'PHP / USD', asOf: '08/19/2015', onedChng: 0.0012}
  ];

  var currencyCodes = ['EUR', 'JPY', 'GBP', 'CHF', 'CAD', 'AUD', 'NZD', 'SEK', 'NOK', 'BRL', 'CNY', 'RUB', 'INR', 'TRY', 'THB', 'IDR', 'MYR', 'MXN', 'ARS', 'DKK', 'ILS', 'PHP'];

  var flagRenderer = function(instance, td, row, col, prop, value, cellProperties) {
    var currencyCode = value;

    while (td.firstChild) {
      td.removeChild(td.firstChild);
    }

    if (currencyCodes.indexOf(currencyCode) > -1) {
      var flagElement = document.createElement('DIV');
      flagElement.className = 'flag ' + currencyCode.toLowerCase();
      td.appendChild(flagElement);

    } else {
      var textNode = document.createTextNode(value === null ? '' : value);
      td.appendChild(textNode);
    }
  };

  var hotElement = document.querySelector('#hot');
  var hotElementContainer = hotElement.parentNode;
  var hotSettings = {
    data: dataObject,
    columns: [
      {
        data: 'id',
        type: 'numeric',
        width: 40
      },
      {
        data: 'flag',
        renderer: flagRenderer
      },
      {
        data: 'currencyCode',
        type: 'text'
      },
      {
        data: 'currency',
        type: 'text'
      },
      {
        data: 'level',
        type: 'numeric',
        format: '0.0000'
      },
      {
        data: 'units',
        type: 'text'
      },
      {
        data: 'asOf',
        type: 'date',
        dateFormat: 'MM/DD/YYYY'
      },
      {
        data: 'onedChng',
        type: 'numeric',
        format: '0.00%'
      }
    ],
    stretchH: 'all',
    width: parseInt(hotElementContainer.offsetWidth, 10),
    autoWrapRow: true,
    height: 441,
    maxRows: 22
  };

  var hot = new Handsontable(hotElement, hotSettings);
</script>

<script src="/static/js/examples/examples_init.js"></script>
<script src="/static/js/examples/example_code_generator.js"></script>
<script src="/static/js/examples/jsfiddleExporter.js"></script>

<script src="/static/bower_components/prism/prism.js"></script>